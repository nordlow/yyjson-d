name "yyjson-d"
targetType "library"
description "D wrapper for yyjson."
license "BSL-1.0"
copyright "Copyright © 2024, Per Nordlöw"
authors "Per Nordlöw <per.nordlow@gmail.com>"
targetPath "bin"

dflags "-vcolumns" "-preview=dip1000" "-preview=in"
importPaths "src"

preBuildCommands "bash provision.sh"
lflags "-L$PACKAGE_DIR/yyjson-build" "-rpath=$PACKAGE_DIR/yyjson-build"
libs "yyjson"

# WARNING: dub picks the first configuration by default so put debug first here!
configuration "debug" { # `redub` doesn't support custom `buildType`
   dflags "-g" "-checkaction=context" "-allinst"
   dflags "-debug" platform="dmd"
   dflags "--d-debug" platform="ldc"
}

configuration "unittest" { # `redub` doesn't support custom `buildType`
	versions "yyjson_test"
	dflags "-g" "-checkaction=context" "-allinst" "-unittest" "-cov" "-cov=ctfe"
	dflags "-fsanitize=address" platform="posix-ldc"
	dflags "-debug" platform="dmd"
	dflags "--d-debug" platform="ldc"
}

buildType "unittest" {
	versions "yyjson_test"
	dflags "-g" "-checkaction=context" "-allinst" "-unittest" "-cov" "-cov=ctfe"
	dflags "-fsanitize=address" platform="posix-ldc"
	dflags "-debug" platform="dmd"
	dflags "--d-debug" platform="ldc"
}

configuration "unittest-without-coverage" { # `redub` doesn't support custom `buildType`
	versions "yyjson_test"
	dflags "-g" "-checkaction=context" "-allinst" "-unittest"
	dflags "-fsanitize=address" platform="posix-ldc"
	dflags "-debug" platform="dmd"
	dflags "--d-debug" platform="ldc"
}

buildType "unittest-without-coverage" {
	versions "yyjson_test"
	dflags "-g" "-checkaction=context" "-allinst" "-unittest"
	dflags "-fsanitize=address" platform="posix-ldc"
	dflags "-debug" platform="dmd"
	dflags "--d-debug" platform="ldc"
}

configuration "benchmark-release" {
	versions "yyjson_benchmark"
	buildOptions "releaseMode" "inline" "optimize"
	dflags "-checkaction=context" "-allinst" "-unittest" "-mcpu=native"
}

buildType "benchmark-release" {
	versions "yyjson_benchmark"
	buildOptions "releaseMode" "inline" "optimize"
	dflags "-checkaction=context" "-allinst" "-unittest" "-mcpu=native"
}
